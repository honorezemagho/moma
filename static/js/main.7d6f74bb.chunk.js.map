{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/searchbox.jsx","utils/paginate.js","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/not-Found.jsx","components/navBar.jsx","components/loginForm.jsx","components/RegisterForm.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","liked","publishDate","saveMovie","movie","movieInDb","find","m","genresAPI","genreId","Date","now","toString","push","ListGroup","items","selectedItem","onItemSelect","textProperty","valueProperty","className","map","item","onClick","key","defaultProps","Like","props","classes","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","_","get","createKey","data","Table","MoviesTable","Link","to","onLike","onDelete","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","aria-label","page","href","SearchBox","value","onChange","type","placeholder","e","currentTarget","paginate","pageNumber","startIndex","slice","take","Movies","state","selectedGenre","searchQuery","handleDelete","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","handleSearch","query","handleSort","getPageData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Input","error","rest","htmlFor","id","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","string","required","number","min","max","history","movieId","match","params","replace","mapToViewModel","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","NavLink","LoginForm","username","password","console","log","RegisterForm","email","App","Fragment","Switch","Route","component","exact","Redirect","Boolean","window","location","hostname","styles","bootstrap","ReactDOM","render","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d6f74bb.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    liked: true,\n    publishDate: \"2018-01-03T19:04:28.809Z\"\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n    liked: true,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n    liked: true,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n    liked: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n    liked: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: true,\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\n\nconst ListGroup = ({items, selectedItem, onItemSelect, textProperty, valueProperty}) => {\n\n       return (\n            <ul className=\"list-group\">\n                {items.map(item => (\n                    <li onClick={() => onItemSelect(item)}\n                        key={item[valueProperty]}\n                        className={item=== selectedItem ? \"list-group-item active\": \"list-group-item\"}>\n                    {item[textProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n}\n\nListGroup.defaultProps = {\n    textProperty: 'name',\n    valueProperty: '_id'\n}\n\nexport default ListGroup;","import React from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\n\nconst Like = (props) => {\n    let classes = \"fa fa-heart\";\n    if(!props.liked) classes +=\"-o\";\n    return (\n        <i  onClick={props.onClick}\n            style={{cursor: \"pointer\"}}\n            className={classes} aria-hidden=\"true\"/>\n    );\n}\nexport default  Like;","import React, {Component} from 'react';\n\nclass TableHeader extends Component {\n    raiseSort = path => {\n        const sortColumn = {...this.props.sortColumn};\n        if(sortColumn.path === path)\n            sortColumn.order = (sortColumn.order === \"asc\") ? \"desc\": \"asc\";\n        else{\n            sortColumn.path = path;\n            sortColumn.order = \"asc\";\n        }\n        this.props.onSort(sortColumn);\n    };\n\n\n\n    renderSortIcon = column => {\n        const {sortColumn} = this.props;\n        if(column.path !== sortColumn.path) return null;\n        if(sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>;\n        return <i className=\"fa fa-sort-desc\"></i>;\n    }\n\n   render() {\n       return (\n           <thead>\n           <tr>\n               {this.props.columns.map(column =>\n                   <th className=\"clickable\"\n                       key={column.path || column.key}\n                       onClick={() => this.raiseSort(column.path)}>\n                       {column.label} {this.renderSortIcon(column)}\n                   </th>)}\n           </tr>\n           </thead>\n       );\n   }\n}\n\nexport default TableHeader;","import React, {Component} from 'react';\nimport _ from 'lodash';\n\nclass TableBody extends  Component {\n    renderCell = (item, column) => {\n        if(column.content) return column.content(item);\n        return _.get(item, column.path)\n    };\n\n    createKey = (item, column) => {\n        return item._id + (column.path || column.key);\n    }\n    render(){\n        const {data, columns}  = this.props;\n\n        return (\n            <tbody>\n            {data.map(item =><tr key={item._id}>\n                {columns.map(column =>\n                    <td key={this.createKey(item, column)}>\n                    {this.renderCell(item, column)}\n                    </td>)\n                }\n            </tr> )}\n            </tbody>\n        );\n    }\n}\n\n\nexport default TableBody;","import React from 'react';\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({columns, sortColumn, onSort, data}) => {\n\n    return (\n        <table className=\"table\">\n            <TableHeader columns={columns}\n                         sortColumn={sortColumn}\n                         onSort={onSort}\n            />\n            <TableBody data={data} columns={columns}/>\n        </table>\n    )\n}\n\nexport default Table;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\n\nclass  MoviesTable extends Component{\n    columns = [\n        {path: 'title', label: 'Title', content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>},\n        {path: 'genre.name', label: 'Genre'},\n        {path: 'numberInStock', label: 'Stock'},\n        {path: 'dailyRentalRate', label: 'Rate'},\n        {\n            key: \"like\",\n            content: movie => (<Like liked={movie.liked}\n                           onClick={() => this.props.onLike(movie)}/>)\n         },\n        {\n            key: \"delete\",\n            content: movie => (<button className=\"btn btn-danger btn-sm\"\n                             onClick={() => this.props.onDelete(movie)}>\n                Delete</button>)\n        }\n    ];\n\n\n\n    render() {\n        const {movies,onSort,sortColumn} = this.props;\n\n        return (\n            <Table columns={this.columns} data={movies}\n                   onSort={onSort} sortColumn={sortColumn}/>\n        );\n    }\n}\n\nexport default MoviesTable;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination  = ({itemsCount,pageSize, onPageChange, currentPage}) =>  {\n\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n\n    if(pagesCount === 1) return null;\n    let pages =  _.range(1,pagesCount +1);\n\n        return (\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    {pages.map(page => (\n                        <li key={page} className={page === currentPage ? \"page-item active\" : 'page-item'}>\n                        <a className=\"page-link\" href=\"#\"\n                        onClick={() => onPageChange(page)}>\n                            {page}</a>\n                    </li> ))}\n                </ul>\n            </nav>\n        );\n}\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage : PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n}\n\nexport default  Pagination;","import React from 'react';\n\n\nconst SearchBox = ({ value, onChange}) => {\n    return (\n        <input \n        type=\"text\"\n        name=\"query\"\n        className=\"form-control my-3\"\n        placeholder=\"Search...\"\n        value={value}\n        onChange={e => onChange(e.currentTarget.value)}\n        />\n    )\n}\n\nexport default SearchBox;","import _ from \"lodash\";\n\nexport  function paginate(items, pageNumber, pageSize){\n    const startIndex = (pageNumber - 1) * pageSize;\n    return  _(items)\n        .slice(startIndex)\n        .take(pageSize)\n        .value();\n}","import React, {Component} from 'react';\nimport {getMovies} from \"../services/fakeMovieService\";\nimport {getGenres} from '../services/fakeGenreService';\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport SearchBox from \"./common/searchbox\";\nimport {paginate} from '../utils/paginate';\nimport _  from 'lodash';\nimport { Link } from 'react-router-dom';\n\n\nclass Movies extends Component{\nstate = {\n    movies: [],\n    genres: [],\n    selectedGenre: 0,\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn : {path:'title', order: 'asc'}\n}\n\ncomponentDidMount() {\n    const genres = [{_id: '', name: 'All Genres'}, ...getGenres()]\n\n    this.setState({movies: getMovies(), genres})\n}\n\n    handleDelete  = (movie) => {\n    const movies = this.state.movies.filter(m => m._id !== movie._id)\n        this.setState({movies})\n    }\n\n    handleLike  = (movie) => {\n        const movies = [...this.state.movies];\n        const index = movies.indexOf(movie);\n        movies[index] = {...movies[index]};\n        movies[index].liked = !movies[index].liked;\n        this.setState({movies});\n    }\n\n    handlePageChange = page => {\n    this.setState({ currentPage: page});\n    }\n\n    handleGenreSelect = genre =>{\n        this.setState({selectedGenre: genre, searchQuery:\"\", currentPage: 1});\n    }\n\n    handleSearch = query => {\n        this.setState({searchQuery: query, selectedGenre:null, currentPage:1})\n    }\n\n    handleSort = sortColumn => {\n        this.setState({sortColumn})\n    }\n\n\n    getPageData = () => {\n        const {pageSize, currentPage,movies: allMovies, selectedGenre,sortColumn, searchQuery} = this.state;\n\n        let filtered = allMovies;\n        if(searchQuery)\n            filtered = allMovies.filter(\n                m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n            );\n        \n        else if (selectedGenre && selectedGenre._id)\n            filtered =  allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n        const sorted = _.orderBy(filtered,[sortColumn.path],[sortColumn.order]);\n\n        const movies = paginate(sorted, currentPage, pageSize);\n\n        return {totalCount : filtered.length, data: movies};\n    }\n\n    render() {\n    const {length: MoviesCount} = this.state.movies;\n\nif(MoviesCount === 0)\n    return <p> There are no movies in the database</p>;\n\n        const {totalCount, data: movies} = this.getPageData();\n        const {pageSize, currentPage,sortColumn, searchQuery} = this.state;\n\n        return( <div className=\"row\">\n\n                <div className=\"col-3\">\n                    <ListGroup items={this.state.genres}\n                               selectedItem ={this.state.selectedGenre}\n                               onItemSelect={this.handleGenreSelect}/>\n                </div>\n                    <div className=\"col-md-9\">\n                        <Link to=\"/movies/new\" className=\"btn btn-primary\" style={{marginBottom: 20}}> New Movie </Link>\n                <p> Showing {totalCount} movies in the database</p>\n\n                        <SearchBox value={searchQuery} onChange={this.handleSearch}/>\n                        <MoviesTable\n                         movies={movies}\n                         sortColumn={sortColumn}\n                        onDelete = {this.handleDelete}\n                        onLike={this.handleLike}\n                        onSort={this.handleSort}/>\n\n                <Pagination itemsCount={totalCount}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={this.handlePageChange}\n                />\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default Movies;","import React from 'react';\n\nconst Input = ({name, label, error, ...rest}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input \n            {...rest}\n            id={name}\n            name={name}\n            className=\"form-control\"/>\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n\n    )\n}\n\nexport default Input;","import React from 'react';\n\nconst Select = ({name, label, options, error, ...rest}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <select name={name} id={name} {...rest} className=\"form-control\">\n                <option value=\"\"/>\n                {options.map(option => (\n                <option key={option._id} value={option._id}>\n                    {option.name}\n                </option>\n                ))}\n            </select>\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n    )\n}\n\nexport default Select;","import React, {Component} from 'react';\nimport Joi from 'joi-browser';\nimport Input from './input';\nimport Select from './select';\n\nclass Form extends Component {\n    state = {\n        data: {}, errors: {}\n    }\n\n        validate = () =>{\n        const options = {abortEarly: false}\n        const {error} = Joi.validate(this.state.data, this.schema, options);\n        \n        if(!error) return null;\n        const errors = {};\n        for(let item of error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n        validateProperty = ({name, value}) => {\n        const obj = {[name]: value};\n        const schema = {[name]: this.schema[name]};\n        const {error} = Joi.validate(obj,schema);\n        return error ? error.details[0].message:null;\n    }\n\n\n      handleSubmit = e => {\n        e.preventDefault();\n\n        const errors = this.validate();\n        this.setState({errors:errors || {}});\n         if(errors) return;\n\n         this.doSubmit();\n    }\n\n        handleChange = ({currentTarget: input})=>{\n        const errors = {...this.state.errors};\n        const errorMessage = this.validateProperty(input);\n        if(errorMessage) errors[input.name] = errorMessage;\n        else delete errors[input.name];\n\n        const data = {...this.state.data};\n        data[input.name] = input.value;\n        this.setState({data, errors});\n    }\n\n   renderButton(label){\n       return <button disabled={this.validate()} className=\"btn btn-primary\">{label}</button>\n   }\n\n   renderInput(name,label,type=\"text\"){\n        const { data, errors } = this.state;\n       return (\n           <Input  name={name} value={data[name]} label={label} id={name}  type={type} onChange={this.handleChange} error={errors[name]}/>\n       )\n   }\n\n      renderSelect(name,label,options){\n        const { data, errors } = this.state;\n       return (\n           <Select  name={name} value={data[name]} label={label} options={options} id={name} onChange={this.handleChange} error={errors[name]}/>\n       )\n   }\n}\n\nexport default Form;","import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport {getMovie, saveMovie} from \"../services/fakeMovieService\";\nimport { getGenres} from \"../services/fakeGenreService\";\n\nclass MovieForm extends Form {\n    state = {\n        data: {\n            title: \"\",\n            genreId: \"\",\n            numberInStock: \"\",\n            dailyRentalRate:\"\"\n        },\n        genres: [],\n        errors: {}\n    }\n\n    schema = {\n        _id: Joi.string(),\n        title: Joi.string().required().label(\"Title\"),\n        genreId: Joi.string().required().label(\"Genre\"),\n        numberInStock: Joi.number().required().min(0).max(100).label(\"Number in Stock\"),\n        dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Daily Rental Rate\"),\n    }\n\n    componentDidMount(){\n        const genres = getGenres();\n        this.setState({genres});\n\n        const movieId = this.props.match.params.id;\n        if(movieId === \"new\") return;\n\n        const movie = getMovie(movieId);\n        if(!movie) return this.props.history.replace(\"/not-found\");\n\n        this.setState({data: this.mapToViewModel(movie)})\n    }\n\n    mapToViewModel(movie){\n        return {\n            _id: movie._id,\n            title: movie.title,\n            genreId: movie.genre._id,\n            numberInStock: movie.numberInStock,\n            dailyRentalRate: movie.dailyRentalRate,\n        }\n    }\n\n    doSubmit = () => {\n        saveMovie(this.state.data);\n        this.props.history.push(\"/movies\");\n    }\n\n    render(){\n       return( <div>\n            <h1>Movie Form</h1>\n            <form onSubmit={this.handleSubmit}>\n                {this.renderInput(\"title\",\"Title\")}\n                 {this.renderSelect(\"genreId\",\"Genre\", this.state.genres)}\n                  {this.renderInput(\"numberInStock\",\"Number in Stock\", \"number\")}\n                   {this.renderInput(\"dailyRentalRate\",\"Rate\")}\n                   {this.renderButton(\"Save\")}\n            </form>\n        </div>); \n    }\n        \n}\n\nexport default MovieForm;","import React, {Component} from 'react';\n\nclass Customers extends Component{\n    state = {}\n\n    render() {\n        return( <div><h1>Customers</h1></div>);\n    }\n}\n\nexport default Customers;","import React, {Component} from 'react';\n\nclass Rentals extends Component{\n    state = {}\n\n    render() {\n        return( <div><h1>Rentals</h1></div>);\n    }\n}\n\nexport default Rentals;","import React, {Component} from 'react';\n\nclass NotFound extends Component{\n    state = {\n        movies: [],\n\n    }\n\n    render() {\n        return( <div><h1>Not Found</h1></div>);\n    }\n}\n\nexport default NotFound;","import React, {Component} from 'react';\nimport {Link, NavLink} from \"react-router-dom\";\n\nclass NavBar extends Component{\n    state = {}\n\n    render() {\n        return(<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/\">MAMO</Link>\n                <button className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarNavAltMarkup\"\n                aria-controls=\"#navbarNavAltMarkup\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"/>\n                </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                <div className=\"navbar-nav\">\n                    <NavLink className=\"nav-item nav-link\" to=\"/movies\">Movies</NavLink>\n                    <NavLink className=\"nav-item nav-link\" to=\"/customers\">Customers</NavLink>\n                    <NavLink className=\"nav-item nav-link\" to=\"/rentals\">Rentals</NavLink>\n                    <NavLink className=\"nav-item nav-link\" to=\"/login\">Login</NavLink>\n                    <NavLink className=\"nav-item nav-link\" to=\"/register\">Register</NavLink>\n                </div>\n            </div>\n        </nav>);\n    }\n}\n\nexport default NavBar;","\nimport React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\n\nclass LoginForm extends Form{\n\n    state = {\n        data: {username: \"\", password: \"\"},\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string().required().label('Username'),\n        password: Joi.string().required().label('Password')\n    }\n\n    doSubmit = () => {\n        //Call the server\n        console.log(\"Submitted\");\n    }\n\n    render(){\n    return( <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n            {this.renderInput(\"username\", \"Username\")}\n            {this.renderInput(\"password\", \"Password\", \"password\")}\n        {this.renderButton('Login')}\n        </form>\n    </div>)};\n}\n\nexport default LoginForm;","import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form'\n\n\nclass RegisterForm extends Form{\n\n   state = {\n        data: {username: \"\", password: \"\",name:\"\"},\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string().email().required().label('Username'),\n        password: Joi.string().min(5).required().label('Password'),\n        name: Joi.string().required().label('Name')\n    }\n\n     doSubmit = () => {\n        //Call the server\n        console.log(\"Submitted\");\n    }\n\n  render(){\n    return( <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n            {this.renderInput(\"username\", \"Username\")}\n            {this.renderInput(\"password\", \"Password\", \"password\")}\n            {this.renderInput(\"name\", \"Name\")}\n        {this.renderButton('Register')}\n        </form>\n    </div>)};\n\n}\n\nexport default RegisterForm;","import React , {Component} from 'react';\nimport {Route, Redirect, Switch} from \"react-router-dom\";\nimport Movies from \"./components/movies\";\nimport MovieForm  from './components/movieForm';\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/not-Found\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/RegisterForm\"\nimport './App.css';\n\n\nclass App extends Component{\n   render(){\n  return (\n    <React.Fragment>\n      <NavBar/>\n        <main className=\"container\">\n        <Switch>\n        <Route path=\"/login\" component={LoginForm}/>\n        <Route path=\"/movies/:id\" component={MovieForm}/>\n        <Route path=\"/movies\" component={Movies}/>\n        <Route path=\"/customers\" component={Customers}/>\n        <Route path=\"/rentals\" component={Rentals}/>\n        <Route path=\"/register\" component={RegisterForm}/>\n        <Route path=\"/not-found\" component={NotFound}/>\n         <Route exact path=\"/\">\n           <Redirect to=\"/movies\"/>\n         </Route>\n          <Route>\n            <Redirect to=\"/not-found\"/>\n          </Route>\n        </Switch>\n        </main>\n    </React.Fragment>\n  );\n }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css';\n\nlet styles = bootstrap;\n\nReactDOM.render(<BrowserRouter>\n    <App className={styles}/>\n</BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}